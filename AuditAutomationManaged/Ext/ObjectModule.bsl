
&НаСервере
Функция ПолучитьСчетаДляФильтра(ВыбСчет)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&ВыбСчет)";
	
	Запрос.УстановитьПараметр("ВыбСчет", ВыбСчет);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Возврат ТЗ.ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаСервере
Процедура СформироватьДокументыНаСервере(ДанныеФормы, КоллекцияПечатныхФорм) Экспорт	
	
	Для Каждого НомерСчета Из ЭтотОбъект.ТаблицаСчетов Цикл
		
		Если НомерСчета.Дт и НомерСчета.Кт Тогда
			Продолжить;	
		КонецЕсли;
		
		// Для передачи дальше для обработки
		ДанныеФормы.Вставить("НомерСчета",НомерСчета);
		
		Запрос = Новый Запрос();
		
		Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ДанныеФормы.ДатаНач));
		Запрос.УстановитьПараметр("ДатаКон",КонецДня(ДанныеФормы.ДатаКон));
		
		ВыбСчет = ПланыСчетов.Хозрасчетный.НайтиПоКоду(НомерСчета.Код);
		
		Если НомерСчета.Дт Тогда
			//СпСчетовДт.Добавить(ВыбСчет);
			Запрос.Параметры.Вставить("СпСчетовДт",ПолучитьСчетаДляФильтра(ВыбСчет));
		КонецЕсли;
		Если НомерСчета.Кт Тогда
			//СпСчетовКт.Добавить(ВыбСчет);
			Запрос.Параметры.Вставить("СпСчетовКт",ПолучитьСчетаДляФильтра(ВыбСчет));
		КонецЕсли;
		
		Запрос.УстановитьПараметр("УровеньСущественности",ДанныеФормы.УровеньСущественности*ДанныеФормы.ПроцентОшибки*0.01);
		Запрос.УстановитьПараметр("Организация",ЭтотОбъект.Организация);
		
		ТекстЗапроса="ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.Период КАК Период,
		|	ХозрасчетныйОборотыДтКт.Регистратор,
		|	ХозрасчетныйОборотыДтКт.Регистратор.Номер КАК НомерРегистратора,
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОборотыДтКт.СуммаОборот > &УровеньСущественности
		|		ТОГДА ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот,0)
		|	КОНЕЦ КАК НаибольшаяСумма,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОборотыДтКт.СуммаОборот < 0
		|		ТОГДА ХозрасчетныйОборотыДтКт.СуммаОборот
		|	КОНЕЦ КАК ОтрицательнаяСумма,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОборотыДтКт.СуммаОборот < 0
		|		ТОГДА 1
		|	КОНЕЦ КАК ЭтоОтрицательнаяСумма,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот,";
		
		Если НомерСчета.Дт=Истина Тогда 
			
			ТекстЗапроса = ТекстЗапроса +  "
			
			|	ЕстьNULL(ХозрасчетныйОборотыДтКт.КоличествоОборотДт,0) КАК Количество,
			|	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Субконто1,
			|	ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК Субконто2,
			|	ХозрасчетныйОборотыДтКт.СубконтоДт3 КАК Субконто3,
			|	ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК КорСубконто1,
			|	ХозрасчетныйОборотыДтКт.СубконтоКт2 КАК КорСубконто2,
			|	ХозрасчетныйОборотыДтКт.СубконтоКт3 КАК КорСубконто3,
			|	ЕстьNULL(Хозрасчетный.Содержание,"""") КАК СтрСодержание";
			
		Иначе 
			
			ТекстЗапроса=ТекстЗапроса + "
			
			|	ЕстьNULL(ХозрасчетныйОборотыДтКт.КоличествоОборотКт,0) КАК Количество,
			|	ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Субконто1,
			|	ХозрасчетныйОборотыДтКт.СубконтоКт2 КАК Субконто2,
			|	ХозрасчетныйОборотыДтКт.СубконтоКт3 КАК Субконто3,
			|	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК КорСубконто1,
			|	ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК КорСубконто2,
			|	ХозрасчетныйОборотыДтКт.СубконтоДт3 КАК КорСубконто3,
			|	ЕстьNULL(Хозрасчетный.Содержание,"""") КАК СтрСодержание";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса+ "
		
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Запись, "+?(НомерСчета.Дт,"СчетДт В (&СпСчетовДт)","")+", ,"+?(НомерСчета.Кт,"СчетКт В (&СпСчетовКт)","")+", , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
		|	ПО ХозрасчетныйОборотыДтКт.Регистратор = Хозрасчетный.Регистратор
		|		И ХозрасчетныйОборотыДтКт.НомерСтроки = Хозрасчетный.НомерСтроки";
		
		ТекстЗапроса = ТекстЗапроса + "
		
		| УПОРЯДОЧИТЬ ПО
		|			Период";
		
		Запрос.Текст = ТекстЗапроса;
		
		ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
		
		СтрокаКоллекции = КоллекцияПечатныхФорм.Добавить();
		
		СтрокаКоллекции.ТабличныйДокумент = ВывестиВТаблицу(ТаблицаРезультата, ДанныеФормы);
		
		СтрокаСчет = ?(НомерСчета.Дт,"ДТ","КТ")+ " " + Строка(НомерСчета.Код);
		СтрокаКоллекции.СтрСчет = СтрокаСчет;
		
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Функция ВывестиВТаблицу(ТаблицаРезультата, ДанныеФормы)
	
	НомерСчета = 					ДанныеФормы.НомерСчета;
	ДатаНач = 						ДанныеФормы.ДатаНач;
	ДатаКон = 							ДанныеФормы.ДатаКон;
	УровеньСущественности = 	ДанныеФормы.УровеньСущественности;
	ПроцентОшибки = 				ДанныеФормы.ПроцентОшибки;
	МаксЭлементВыборки = 		ДанныеФормы.МаксЭлементВыборки;
	МинЭлементВыборки = 		ДанныеФормы.МинЭлементВыборки;
	КоэффициентПроверки = 	ДанныеФормы.КоэффициентПроверки;
	
	ГенеральнаяСовокупность = ТаблицаРезультата.Итог("СуммаОборот");
	
	СуммаНаибольшихЭлементов = ТаблицаРезультата.Итог("НаибольшаяСумма");
	
	СуммаОтрицательных = ТаблицаРезультата.Итог("ОтрицательнаяСумма");
	КоличествоОтрицательных = ТаблицаРезультата.Итог("ЭтоОтрицательнаяСумма");
	
	КоличествоЭлементовДляПроверки = Окр((ГенеральнаяСовокупность-СуммаНаибольшихЭлементов)*КоэффициентПроверки/(УровеньСущественности*ПроцентОшибки*0.01));
	
	ГенеральнаяСовокупностьВывод = Формат(ГенеральнаяСовокупность,"ЧДЦ=2; ЧРГ=' '");
	СуммаНаибольшихЭлементовВывод=Формат(СуммаНаибольшихЭлементов,"ЧДЦ=2; ЧРГ=' '");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АвтоматизацияАудитаНовая04";
	
	Макет = ПолучитьМакет("МакетОтчета");
	
	
	
	// ЛИСТ 3 (РВ) Расчет параметров статистической выборки
	
	ТабДанных_Лист3 = Новый ТаблицаЗначений;
	ТабДанных_Лист3.Колонки.Добавить("НомерСтроки");
	ТабДанных_Лист3.Колонки.Добавить("Номервыборки");
	
	ОбластьШапка_Лист3 = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка_Лист3.Параметры.НаименованиеОтчета = "Расчет параметров статистической выборки по счету " + ?(НомерСчета.Дт,"ДТ","КТ")+ " " + Строка(НомерСчета.Код); 
	ОбластьШапка_Лист3.Параметры.НаименованиеОрганизации = ЭтотОбъект.Организация.НаименованиеПолное;
	ОбластьШапка_Лист3.Параметры.ПериодОтчета = Формат(ДатаНач,"ДЛФ=Д")+"-"+Формат(ДатаКон,"ДЛФ=Д"); 
	
	Параметры_Лист3 = Новый Структура;
	Параметры_Лист3.Вставить("УровеньСущественности",УровеньСущественности);
	Параметры_Лист3.Вставить("РазмерДопустимойОшибкиИмя","Размер допустимой ошибки( "+ПроцентОшибки+"% от Уровня существенности)");
	Параметры_Лист3.Вставить("РазмерДопустимойОшибки",УровеньСущественности*ПроцентОшибки*0.01);
	
	Параметры_Лист3.Вставить("ГенеральнаяСовокупность",ГенеральнаяСовокупность);
	Параметры_Лист3.Вставить("КоличествоЭлементов",Таблицарезультата.Количество());
	
	Параметры_Лист3.Вставить("СуммаНаибольшихЭлементов",СуммаНаибольшихЭлементов);
	Параметры_Лист3.Вставить("КоличествоНаибольшихЭлементов",0);
	
	Параметры_Лист3.Вставить("СуммаОтрицательных",СуммаОтрицательных);
	Параметры_Лист3.Вставить("КоличествоОтрицательных",КоличествоОтрицательных);
	
	Параметры_Лист3.Вставить("КоличествоЭлементовДляПроверки",КоличествоЭлементовДляПроверки);
	
	Параметры_Лист3.Вставить("МинЭлементВыборки",МинЭлементВыборки);
	Параметры_Лист3.Вставить("МаксЭлементВыборки",МаксЭлементВыборки);
	
	Параметры_Лист3.Вставить("ПроцентОшибки",ПроцентОшибки);
	Параметры_Лист3.Вставить("КоэффициентПроверки",КоэффициентПроверки);
	
		
	// ЛИСТ 0 (ГС) Генеральная совокупность по счету
	
	ТабДанных_Лист0 = Новый ТаблицаЗначений;
	ТабДанных_Лист0.Колонки.Добавить("НомерСтр");
	ТабДанных_Лист0.Колонки.Добавить("Дата");
	ТабДанных_Лист0.Колонки.Добавить("Документ");
	ТабДанных_Лист0.Колонки.Добавить("Содержание");
	
	ТабДанных_Лист0.Колонки.Добавить("СчетДт");
	ТабДанных_Лист0.Колонки.Добавить("АналитикаДт");
	ТабДанных_Лист0.Колонки.Добавить("СчетКт");
	ТабДанных_Лист0.Колонки.Добавить("АналитикаКт");
	
	ТабДанных_Лист0.Колонки.Добавить("Сумма");
	ТабДанных_Лист0.Колонки.Добавить("Количество");
	ТабДанных_Лист0.Колонки.Добавить("Признак");
	
	ОбластьШапка_Лист0 = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка_Лист0.Параметры.НаименованиеОтчета = "Генеральная совокупность по счету " + ?(НомерСчета.Дт,"ДТ","КТ")+ " " + Строка(НомерСчета.Код); 
	ОбластьШапка_Лист0.Параметры.НаименованиеОрганизации = ЭтотОбъект.Организация.НаименованиеПолное;
	ОбластьШапка_Лист0.Параметры.ПериодОтчета = Формат(ДатаНач,"ДЛФ=Д")+"-"+Формат(ДатаКон,"ДЛФ=Д"); 
	
	ОбластьШабкаТаб_Лист0 = Макет.ПолучитьОбласть("ШабкаТаблицы"); 
	
	
	// ЛИСТ 1 (Н) Наибольшая стоимость по счету

	ТабДанных_Лист1 = ТабДанных_Лист0.СкопироватьКолонки();
	
	ОбластьШапка_Лист1 = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка_Лист1.Параметры.НаименованиеОтчета = "Наибольшая стоимость по счету " + ?(НомерСчета.Дт,"ДТ","КТ")+ " " + Строка(НомерСчета.Код); 
	ОбластьШапка_Лист1.Параметры.НаименованиеОрганизации = ЭтотОбъект.Организация.НаименованиеПолное;
	ОбластьШапка_Лист1.Параметры.ПериодОтчета = Формат(ДатаНач,"ДЛФ=Д")+"-"+Формат(ДатаКон,"ДЛФ=Д"); 
	
	ОбластьШабкаТаб_Лист1 = Макет.ПолучитьОбласть("ШабкаТаблицы"); 
	
	
	// ЛИСТ 2 (В) Выборочные по счету
	
	ТабДанных_Лист2 = ТабДанных_Лист0.СкопироватьКолонки();
	
	ОбластьШапка_Лист2 = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка_Лист2.Параметры.НаименованиеОтчета = "Выборочные по счету " + ?(НомерСчета.Дт,"ДТ","КТ")+ " " + Строка(НомерСчета.Код); 
	ОбластьШапка_Лист2.Параметры.НаименованиеОрганизации = ЭтотОбъект.Организация.НаименованиеПолное;
	ОбластьШапка_Лист2.Параметры.ПериодОтчета = Формат(ДатаНач,"ДЛФ=Д")+"-"+Формат(ДатаКон,"ДЛФ=Д"); 
	
	ОбластьШабкаТаб_Лист2 = Макет.ПолучитьОбласть("ШабкаТаблицы"); 
	
	// РАСЧЕТ
	
	НомерОперации = 0;
	НомерСтрокиН=0;
	
	МассивВыбранныхОпераций = Новый Массив;
	
	ГСЧ = Новый ГенераторСлучайныхЧисел();
	
	КоличествоЭлементов = ТаблицаРезультата.Количество() - 1;
	
	//!!!Заполняем таблицы листов 1 и 2
	Для каждого Результат из ТаблицаРезультата Цикл
		НомерОперации = НомерОперации+1;
		
		СтрТаб_Лист0 = ТабДанных_Лист0.Добавить();
		СтрТаб_Лист0.НомерСтр = НомерОперации;
		СтрТаб_Лист0.Дата = Формат(Результат.Период,"ДЛФ=Д");
		СтрТаб_Лист0.Документ = Строка(ТипЗнч(Результат.Регистратор)) + " " +Строка(Результат.НомерРегистратора);
		СтрТаб_Лист0.АналитикаДт = ПолучитьСубконтоСтр(Результат.Субконто1,Результат.Субконто2,Результат.Субконто3,";");
		СтрТаб_Лист0.АналитикаКт = ПолучитьСубконтоСтр(Результат.КорСубконто1,Результат.КорСубконто2,Результат.КорСубконто3,";");
		СтрТаб_Лист0.Содержание = Результат.СтрСодержание;
		
		СтрТаб_Лист0.СчетДт = Строка(Результат.СчетДт);
		СтрТаб_Лист0.СчетКт = Строка(Результат.СчетКт);
		СтрТаб_Лист0.Сумма =  Результат.СуммаОборот;
		СтрТаб_Лист0.Количество = Результат.Количество;
		
		
		Если Результат.НаибольшаяСумма<>Null и 0 < Результат.НаибольшаяСумма Тогда 
			
			СтрТаб_Лист0.Признак = "Н";
			
			НомерСтрокиН = НомерСтрокиН+1;
			
			СтрТаб_Лист1 = ТабДанных_Лист1.Добавить();
			СтрТаб_Лист1.НомерСтр = НомерОперации;
			СтрТаб_Лист1.Дата = Формат(Результат.Период,"ДЛФ=Д");
			СтрТаб_Лист1.Документ = Строка(ТипЗнч(Результат.Регистратор)) + " " +Строка(Результат.НомерРегистратора);
			СтрТаб_Лист1.АналитикаДт = ПолучитьСубконтоСтр(Результат.Субконто1,Результат.Субконто2,Результат.Субконто3,";");
			СтрТаб_Лист1.АналитикаКт = ПолучитьСубконтоСтр(Результат.КорСубконто1,Результат.КорСубконто2,Результат.КорСубконто3,";");
			СтрТаб_Лист1.Содержание = Результат.СтрСодержание;
			
			СтрТаб_Лист1.СчетДт = Строка(Результат.СчетДт);
			СтрТаб_Лист1.СчетКт = Строка(Результат.СчетКт);
			СтрТаб_Лист1.Сумма =  Результат.СуммаОборот;
			СтрТаб_Лист1.Количество = Результат.Количество;
			СтрТаб_Лист1.Признак = "Н";
			
			МассивВыбранныхОпераций.Добавить(ТаблицаРезультата.Индекс(Результат)); 
			
		КонецЕсли;
		
		Сообщить("Запись в генеральную последовательность:" + Строка(ТипЗнч(Результат.Регистратор)) + " " +Строка(Результат.НомерРегистратора));
		
	КонецЦикла;	
	
	//!!! Заполняем таблицу листа 3. Как запихнуть в цикл сверху - я не знаю.
	
	//!!! Сколько элементов осталось для статистической выборки после выбора наибольших 
	КоличествоОставшихся = Таблицарезультата.Количество()-МассивВыбранныхОпераций.Количество();
	
	//!!! Теперь исходя из максимального и минимального количеств элементов выборки, и от количества оставшихся
	//!!! прикинем, сколько элементов(числоШаговВыборки) можно выбрать для статистической выборки
	
	
	Если КоличествоОставшихся<МинЭлементВыборки Тогда 
		
		ЧислоШаговВыборки=КоличествоОставшихся; //!!!
		
	ИначеЕсли КоличествоОставшихся>=МинЭлементВыборки И КоличествоОставшихся<=МаксЭлементВыборки Тогда // Осталось посередине между Мин и Макс
		
		Если КоличествоЭлементовДляПроверки < МинЭлементВыборки Тогда // Расчетных меньше минимального - берем минимальное
			
			ЧислошаговВыборки = МинЭлементВыборки;
			
		ИначеЕсли КоличествоЭлементовДляПроверки > МаксЭлементВыборки Тогда // Расчетных больше максимального - берем то что осталось
			
			ЧислошаговВыборки = КоличествоОставшихся;
			
		Иначе // Если расчетных между Мин и Макс, берем меньшее из Расчетного и Оставшихся
			
			ЧислошаговВыборки = Мин(КоличествоЭлементовДляПроверки,КоличествоОставшихся);
			
		КонецЕсли;	
		
	ИначеЕсли КоличествоОставшихся>МаксЭлементВыборки Тогда // Осталось больше максимального - Хватет на все
		
		Если  КоличествоЭлементовДляПроверки<=МаксЭлементВыборки Тогда // Если Расчетное меньше Максимального, то берем большее из Расчетного и Минимального
			
			ЧислоШаговВыборки=Макс(КоличествоЭлементовДляПроверки,МинЭлементВыборки);
			
		ИначеЕсли КоличествоЭлементовДляПроверки>МаксЭлементВыборки Тогда
			
			ЧислоШаговВыборки = МаксЭлементВыборки;
			
		КонецЕСли;
		
		
	КонецЕсли;
	
	//!!!Цикл заполнения листа 3
	//!!! уух. Макс эл цикла равен числу элементов выборки, в массиве выбранных операций все выбранные операции(наибольшие) и добавляются выбранные по статистике
	//!!! цикл ПОКА - для поиска оставшихся не выбранных и не попавших в массив строк
	
	//!!!  ТаблицаНомеровВыборок - для таблички в последнем листе
	ТаблицаНомеровВыборок = Новый таблицазначений;
	ТаблицаНомеровВыборок.Колонки.Добавить("НомерСтроки");
	ТаблицаНомеровВыборок.Колонки.Добавить("НомерВыборки");
	ПорядковыйНомерВыборки=0;
	
	Попытка
		СлучайноеЧислоВыборки = ГСЧ.СлучайноеЧисло(0,КоличествоЭлементов-1);
		СуммаВыбранныхОпераций = 0;
		Для Шаг = 1 По ЧислоШаговВыборки Цикл
			
			Пока МассивВыбранныхОпераций.Найти(СлучайноеЧислоВыборки)<>Неопределено Цикл
				СлучайноеЧислоВыборки = ГСЧ.СлучайноеЧисло(0,КоличествоЭлементов-1);
				
				Если Таблицарезультата.Количество() = МассивВыбранныхОпераций.Количество() Тогда
					Прервать;
				КОнецЕсли;
				
				Сообщить("Поиск случайных элементов");
				
			КонецЦикла;
			
			МассивВыбранныхОпераций.ДОбавить(СлучайноеЧислоВыборки); 
			
			СтрокаВыборки = ТаблицаРезультата[СлучайноеЧислоВыборки];
			
			
			ПорядковыйНомерВыборки=ПорядковыйНомерВыборки+1;
			СтрочкаВПоследнийЛист = ТаблицаНомеровВыборок.Добавить();
			СтрочкаВПоследнийЛист.НомерСтроки = ПорядковыйНомерВыборки;
			СтрочкаВПоследнийЛист.НомерВыборки = ТаблицаРезультата.Индекс(СтрокаВыборки)+1;
			
			СтрТаб_Лист2 = ТабДанных_Лист2.Добавить();
			СтрТаб_Лист2.НомерСтр = ТаблицаРезультата.Индекс(СтрокаВыборки)+1;
			СтрТаб_Лист2.Дата = Формат(СтрокаВыборки.Период,"ДЛФ=Д");
			СтрТаб_Лист2.Документ = Строка(ТипЗнч(СтрокаВыборки.Регистратор)) + " " +Строка(СтрокаВыборки.НомерРегистратора);
			СтрТаб_Лист2.АналитикаДт = ПолучитьСубконтоСтр(СтрокаВыборки.Субконто1,СтрокаВыборки.Субконто2,СтрокаВыборки.Субконто3,";");
			СтрТаб_Лист2.АналитикаКт = ПолучитьСубконтоСтр(СтрокаВыборки.КорСубконто1,СтрокаВыборки.КорСубконто2,СтрокаВыборки.КорСубконто3,";");
			СтрТаб_Лист2.Содержание = СтрокаВыборки.СтрСодержание;
			
			СтрТаб_Лист2.СчетДт = Строка(СтрокаВыборки.СчетДт);
			СтрТаб_Лист2.СчетКт = Строка(СтрокаВыборки.СчетКт);
			СтрТаб_Лист2.Сумма =  СтрокаВыборки.СуммаОборот;
			СтрТаб_Лист2.Количество = СтрокаВыборки.Количество;
			СтрТаб_Лист2.Признак = "В";
			
			
			ТабДанных_Лист0[СлучайноеЧислоВыборки].Признак = "В";
			
			СуммаВыбранныхОпераций = СуммаВыбранныхОпераций+СтрокаВыборки.СуммаОборот;
			
			Сообщить("Запись выборочных элементов:" + Строка(ТипЗнч(СтрокаВыборки.Регистратор)) + " " +Строка(СтрокаВыборки.НомерРегистратора));
			
		КонецЦикла;
		
	Исключение
		//!!!нет результата запроса	
	КонецПопытки;
	
	//!!!Итого Листа 0
	
	СуммаИтого_Лист0 = ГенеральнаяСовокупностьВывод;
	КоличествоИтого_Лист0 = ТаблицаРезультата.Итог("Количество");
	

	//!!!Итого Листа 1
	
	СуммаИтого_Лист1 = СуммаНаибольшихЭлементовВывод;
	КоличествоИтого_Лист1 = "";
	
		
	//!!!Итого Листа 2
	
	СуммаИтого_Лист2 = СуммаВыбранныхОпераций;
	КоличествоИтого_Лист2 = "";
	
	
	//!!! Итого Листа 3
	
	Параметры_Лист3.Вставить("КоличествоНаибольшихЭлементов",ЧислоШаговВыборки);
	
	
	
	Для каждого СтрокаВыборки из ТаблицаНомеровВыборок Цикл
		Строка_Лист3 = ТабДанных_Лист3.Добавить();
		Строка_Лист3.НомерСтроки = СтрокаВыборки.НомерСтроки;
		Строка_Лист3.Номервыборки = СтрокаВыборки.Номервыборки;
	КонецЦикла;
	
	СуммаВыбранныхОпераций=0;
	ГенеральнаяСовокупность=0;
	СуммаНаибольшихЭлементов=0;
	//ОбрабатыватьПрерываниеПользователя();
	
	
	// ВЫВОД ОБЛАСТЕЙ В ДОКУМЕНТ

	// -- ЛИСТ 0
		
	ТабличныйДокумент.Вывести(ОбластьШапка_Лист0);
	
	ОбластьШапка = Макет.ПолучитьОбласть("ШабкаТаблицы");
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицы");
	Для каждого СтрТаб Из  ТабДанных_Лист0 Цикл
		ОбластьСтрока.Параметры.Заполнить(СтрТаб);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ОбластьИтог = Макет.ПолучитьОбласть("ИтогоТаблицы");
	ОбластьИтог.Параметры.СуммаИтого = СуммаИтого_Лист0;
	ОбластьИтог.Параметры.КоличествоИтого = КоличествоИтого_Лист0;
	ТабличныйДокумент.Вывести(ОбластьИтог);
	
	// -- ЛИСТ 1
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ТабличныйДокумент.Вывести(ОбластьШапка_Лист1);
	
	ОбластьШапка = Макет.ПолучитьОбласть("ШабкаТаблицы");
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицы");
	Для каждого СтрТаб Из  ТабДанных_Лист1 Цикл
		ОбластьСтрока.Параметры.Заполнить(СтрТаб);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ОбластьИтог = Макет.ПолучитьОбласть("ИтогоТаблицы");
	ОбластьИтог.Параметры.СуммаИтого = СуммаИтого_Лист1;
	ОбластьИтог.Параметры.КоличествоИтого = КоличествоИтого_Лист1;
	ТабличныйДокумент.Вывести(ОбластьИтог);
	
	// -- ЛИСТ 2
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ТабличныйДокумент.Вывести(ОбластьШапка_Лист2);
	
	ОбластьШапка = Макет.ПолучитьОбласть("ШабкаТаблицы");
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицы");
	Для каждого СтрТаб Из  ТабДанных_Лист2 Цикл
		ОбластьСтрока.Параметры.Заполнить(СтрТаб);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ОбластьИтог = Макет.ПолучитьОбласть("ИтогоТаблицы");
	ОбластьИтог.Параметры.СуммаИтого = СуммаИтого_Лист2;
	ОбластьИтог.Параметры.КоличествоИтого = КоличествоИтого_Лист2;
	ТабличныйДокумент.Вывести(ОбластьИтог);
	
	// -- ЛИСТ 3
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ТабличныйДокумент.Вывести(ОбластьШапка_Лист3);
	
	ОбластьТелоРВ = Макет.ПолучитьОбласть("ТелоРВ");
	ОбластьТелоРВ.Параметры.Заполнить(Параметры_Лист3);	
	ТабличныйДокумент.Вывести(ОбластьТелоРВ);
	
	
	ОбластьШапка = Макет.ПолучитьОбласть("ШабкаТаблицыРВ");
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицыРВ");
	Для каждого СтрТаб Из  ТабДанных_Лист3 Цикл
		ОбластьСтрока.Параметры.Заполнить(СтрТаб);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	
	// -- Показать отчет
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьСубконтоСтр(ЗначСубконто1,ЗначСубконто2,ЗначСубконто3,Суффикс="") Экспорт 
	СтрВозврат="";
	Если ЗначениеЗаполнено(ЗначСубконто1) Тогда
		СтрВозврат = СтрВозврат+СокрЛП(ЗначСубконто1);   
	КонецЕсли;
	Если ЗначениеЗаполнено(ЗначСубконто2) Тогда
		СтрВозврат = СтрВозврат+Суффикс+Символы.ПС+СокрЛП(ЗначСубконто2);   
	КонецЕсли;
	Если ЗначениеЗаполнено(ЗначСубконто3) Тогда
		СтрВозврат = СтрВозврат+Суффикс+Символы.ПС+СокрЛП(ЗначСубконто3);   
	КонецЕсли;
	Возврат СтрВозврат;	
КонецФункции
